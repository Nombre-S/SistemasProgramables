import framebuf
from utime import sleep
from machine import Pin, I2C
from ssd1306 import SSD1306_I2C

# https://wokwi.com/projects/379037543681083393

pix_res_x = 128
pix_res_y = 64
onMenu = True
option = 1

btnUp = Pin(1, Pin.IN, Pin.PULL_UP)
btnDown = Pin(2, Pin.IN, Pin.PULL_UP)
btnEnter = Pin(3, Pin.IN, Pin.PULL_UP)

i2c = I2C(0, scl=Pin(21), sda=Pin(20), freq=200000)
oled = SSD1306_I2C(pix_res_x, pix_res_y, i2c)

cursor = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 
0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xff, 0x80, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xff, 
0xf0, 0xff, 0xff, 0xf0, 0x00, 0xff, 0x80, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xf0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])

temp = bytearray([0x00, 0x0f, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x39, 0xc0, 0x00, 0x00, 0x30, 0xcf, 0xc0, 
0x00, 0x30, 0xcf, 0xc0, 0x00, 0x30, 0xc0, 0x00, 0x00, 0x30, 0xc0, 0x00, 0x00, 0x30, 0xcf, 0xc0, 
0x00, 0x30, 0xcf, 0xc0, 0x00, 0x30, 0xc0, 0x00, 0x00, 0x30, 0xc0, 0x00, 0x00, 0x36, 0xcf, 0xc0, 
0x00, 0x36, 0xcf, 0xc0, 0x00, 0x36, 0xc0, 0x00, 0x00, 0x36, 0xc0, 0x00, 0x00, 0x36, 0xc7, 0xc0, 
0x00, 0x36, 0xc7, 0xc0, 0x00, 0x76, 0xe0, 0x00, 0x00, 0xf6, 0xf0, 0x00, 0x01, 0xcf, 0x38, 0x00, 
0x01, 0xbf, 0xd8, 0x00, 0x03, 0xbf, 0xdc, 0x00, 0x03, 0x7f, 0xec, 0x00, 0x03, 0x7f, 0xec, 0x00, 
0x03, 0x7f, 0xec, 0x00, 0x03, 0x7f, 0xec, 0x00, 0x03, 0xbf, 0xdc, 0x00, 0x01, 0xbf, 0xd8, 0x00, 
0x01, 0xcf, 0x38, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x1f, 0x80, 0x00])

logo = bytearray([0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xe7, 0xff, 0xff, 0xf1, 0xc7, 0xff, 0xff, 0xf0, 0x07, 0xff, 
0xfe, 0xf0, 0x03, 0x9f, 0xfc, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x80, 0x1f, 0xfe, 0x07, 0xf8, 0x3f, 
0xfe, 0x1c, 0x0c, 0x3f, 0xfc, 0x30, 0x06, 0x1f, 0xe0, 0x21, 0xe3, 0x01, 0xe0, 0x63, 0xf1, 0x01, 
0xe0, 0x43, 0xf1, 0x87, 0xf8, 0xc3, 0xf1, 0x8f, 0xf8, 0xc3, 0xf1, 0x8f, 0xf8, 0xc3, 0xf1, 0x8f, 
0xf8, 0x43, 0xf1, 0x83, 0xe0, 0x63, 0xf1, 0x01, 0xe0, 0x61, 0xe3, 0x01, 0xe4, 0x30, 0x06, 0x1f, 
0xfe, 0x1c, 0x0c, 0x1f, 0xfe, 0x07, 0xf8, 0x3f, 0xfe, 0x01, 0xe0, 0x1f, 0xfc, 0x03, 0xe0, 0x0f, 
0xfc, 0x63, 0xe3, 0x9e, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xf1, 0xe3, 0xff, 0xff, 0xf1, 0xe3, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00])

foto = bytearray([0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7f, 0xff, 0xff, 
0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 
0xff, 0xff, 0xf0, 0x00, 0x40, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x1f, 0xfc, 0x1f, 0xff, 0xff, 
0xff, 0xff, 0xf0, 0x3f, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0x1f, 0xff, 0xff, 
0xff, 0xff, 0xf0, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xcf, 0xff, 0xff, 
0xff, 0xff, 0xf0, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x07, 0xc1, 0xcf, 0xff, 0xff, 
0xff, 0xff, 0xf0, 0x03, 0xc0, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xdf, 0xcf, 0xff, 0xff, 
0xff, 0xff, 0xf0, 0x39, 0xe3, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xc0, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xf0, 0x0d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0x7d, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xf1, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xf9, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xf0, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf8, 0x5f, 0xdf, 0xff, 0xff, 
0xff, 0xff, 0xf0, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x79, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xc8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x20, 0x7f, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xe0, 0x3b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x19, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xc0, 0x08, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xfd, 0x7f, 0xff, 0xff, 
0xff, 0xfe, 0x00, 0x00, 0x43, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x07, 0x3f, 0xff, 0xff, 
0xff, 0xfe, 0x00, 0x00, 0x0f, 0x3f, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0x07, 0xff, 0xff, 
0xff, 0xfe, 0x00, 0x00, 0x3f, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7e, 0x00, 0x1f, 0xff, 
0xff, 0xfc, 0x00, 0x00, 0x7e, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7c, 0x00, 0x03, 0xff, 
0xff, 0xf8, 0x00, 0x00, 0xf8, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x7f, 
0xff, 0xc0, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0x80, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x3f, 
0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x3f, 
0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 
0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 
0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03])

def Menu(oled, option):
    oled.fill(0)
    oled.text("Menu de Opciones", 0, 0)
    oled.hline(0, 9, 128, 1)
    oled.text("Hola Mundo", 22, 15)
    oled.text("Temperatura", 22, 35)
    oled.text("Creditos", 22, 55)
    if option == 1:
        oled.fill_rect(0, 48, 20, 20, 0)
        oled.fill_rect(0, 30, 20, 20, 0)
        
        displayImg(oled, cursor, 20, 20, 0, 10)
    elif option == 2:
        oled.fill_rect(0, 10, 20, 20, 0)
        
        oled.fill_rect(0, 48, 20, 20, 0)
        displayImg(oled, cursor, 20, 20, 0, 30)
    elif option == 3:
        oled.fill_rect(0, 10, 20, 20, 0)
        oled.fill_rect(0, 30, 20, 20, 0)
        
        displayImg(oled, cursor, 20, 20, 0, 48)
    oled.show()

def displayImg(oled, IMGname, resX, resY, posX, posY):
    IMG = framebuf.FrameBuffer(IMGname, resX, resY, framebuf.MONO_HLSB)
    oled.blit(IMG, posX, posY)
    oled.show()

def displayCont(oled, option):
    oled.fill(0)
    if option == 1:
        oled.text("Hola mundo", 23, 0)
        oled.text("ITT", 50, 50)
        displayImg(oled, logo, 32, 32, 45, 15)
        oled.show()
    elif option == 2:
        adc = machine.ADC(4) 
        ADC_voltage = adc.read_u16() * (3.3 / (65536))
        temperature_celcius = 27 - (ADC_voltage - 0.706)/0.001721
        temp_fahrenheit=32+(1.8*temperature_celcius)
        oled.text(f"Temperatura: ", 5, 5)
        oled.text(f"{temperature_celcius:.3f}C {temp_fahrenheit:.3f}F", 5, 15)
        displayImg(oled, temp, 32, 32, 50, 30)
    elif option == 3:
        oled.text("Alejandro Soto", 12,0)
        displayImg(oled, foto, 64, 64, 30, 10)
    oled.show()

def main():
    global onMenu, option
    Menu(oled, option)

    while True:
        if onMenu == True:
            if btnUp.value() == 0:
                if option == 1:
                    option = 3
                    Menu(oled, option)
                elif option == 2:
                    option = 1
                    Menu(oled, option)
                elif option == 3:
                    option = 2
                    Menu(oled, option)
            elif btnDown.value() == 0:
                if option == 1:
                    option = 2
                    Menu(oled, option)
                elif option == 2:
                    option = 3
                    Menu(oled, option)
                elif option == 3:
                    option = 1
                    Menu(oled, option)
            elif btnEnter.value() == 0:
                onMenu = False
                if option == 1:
                    displayCont(oled, option)
                if option == 2:
                    displayCont(oled, option)
                if option == 3:
                    displayCont(oled, option)
        elif btnEnter.value() == 0:
            onMenu = True
            if option == 1:
                Menu(oled, option)
            if option == 2:
                Menu(oled, option)
            if option == 3:
                Menu(oled, option)
        sleep(0.1)

if __name__ == '__main__':
    main()
